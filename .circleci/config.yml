#### Configuration file for CircleCI CI/CD ####
version: 2.1

orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@1.0.2

jobs:
  #run unit tests and generate coverage
  build-and-test:
    executor: python/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install test and coverage tools
          command: |
            pip install -r requirements.txt
            pip install coverage
      - run:
          name: Run tests with coverage
          command: |
            coverage run -m unittest discover tests/
            coverage xml -o coverage.xml
      - persist_to_workspace:
          root: .
          paths:
            - coverage.xml
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  #linter and code coverage
  lint-and-coverage:
    executor: python/default
    description: |
      Running flake8 linting and uploading coverage report.
    steps:
      - checkout
      - attach_workspace:
          at: .
      - python/install-packages:
          pkg-manager: pip
          packages: |
            flake8
      - run:
          name: Linter
          command: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics > /tmp/flake8_output.txt || true
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics >> /tmp/flake8_output.txt || true
      - codecov/upload:
          file: coverage.xml
          flags: tests
      - store_artifacts:
          path: /tmp/flake8_output.txt
          destination: flake8-output.txt
      - store_artifacts:
          path: coverage.xml
          destination: coverage-report.xml

  #package safety and bandit security check
  safety-and-bandit:
    executor: python/default
    description: |
      Running package safety and bandit security check.
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - python/install-packages:
          pkg-manager: pip
          packages: |
            safety
            bandit
      - run:
          name: Safety
          command: safety check > /tmp/package_safety_output.txt || true
      - run:
          name: Bandit
          command: bandit -r . > /tmp/bandit_output.txt || true
      - store_artifacts:
          path: /tmp/package_safety_output.txt
          destination: safety-output.txt
      - store_artifacts:
          path: /tmp/bandit_output.txt
          destination: bandit-output.txt

  #verify installation of iso3166_updates
  iso3166-updates-pipeline:
    executor: python/default
    description: |
      Check iso3166_updates installation and version.
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: iso3166_updates installation test
          command: |
            pip install iso3166_updates
            echo -e "import iso3166_updates as iso3166_updates\nprint(iso3166_updates.__version__)" | python

#workflow orchestration
workflows:
  main:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: [main]
      - lint-and-coverage:
          filters:
            branches:
              only: [main]
      - safety-and-bandit:
          filters:
            branches:
              only: [main]
      - iso3166-updates-pipeline:
          requires:
            - build-and-test
          filters:
            branches:
              only: [main]